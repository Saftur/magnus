class ShipController : ZilchComponent
{
    //[Property]
    //var Invincible : Boolean = false;
    
    
    var Accel : Real = 10;
    var MaxSpeed : Real = 10;
 

 
  
    
    
    var DeathTimer : Real = 1;
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        
        var mousePos : Real3 = this.LevelSettings.CameraViewport.ScreenToWorldZPlane(Zero.Mouse.ScreenPosition, 0.0);
        
        
        
        
        this.Owner.Orientation.LookAtPoint(mousePos);
       
      
        if(this.Owner.ShipStatus.Dead)
            return;
        // Have a place to record the total movement we want to make:
        //var movement =  Real3();
        
        //breaks
        if(Zero.Keyboard.KeyIsDown(Keys.W)) //W to move
        {
            this.Owner.DragEffect.Active = true;
           
            this.Owner.RigidBody.Velocity = mousePos - this.Owner.Transform.Translation;
            Console.WriteLine(this.Owner.Orientation.LocalForward);
            Console.WriteLine("Gets here"); 
        }
        //else if(Zero.Keyboard.KeyIsReleased(Keys.F))
        //{
        //    this.Owner.DragEffect.Active = false;
        //}
        
        
        //// If I hold down the up arrow key,
        //if (Zero.Keyboard.KeyIsDown(Keys.W) || Zero.Keyboard.KeyIsDown(Keys.Up))
        //{
            // Record desired upward motion along the world y-axis:
         //   movement +=  Real3(0.0, 1.0, 0.0);
       // }
        // If I hold down the down arrow key,
       // if (Zero.Keyboard.KeyIsDown(Keys.Down)|| Zero.Keyboard.KeyIsDown(Keys.S))
        
            // Record desired downward motion along the world y-axis:
         //   movement +=  Real3(0.0, -1.0, 0.0);
        
        // If I hold down the right arrow key,
        //if (Zero.Keyboard.KeyIsDown(Keys.Right) || Zero.Keyboard.KeyIsDown(Keys.D))
       // {
            // Record desired rightward motion along the world x-axis:
         //   movement +=  Real3(1.0, 0.0, 0.0);
        //}
        // If I hold down the left arrow key,
        //if (Zero.Keyboard.KeyIsDown(Keys.Left) || Zero.Keyboard.KeyIsDown(Keys.A))
        //{
            // Record desired leftward motion along the world x-axis:
          //  movement +=  Real3(-1.0, 0.0, 0.0);
        
        mousePos = this.LevelSettings.CameraViewport.ScreenToWorldZPlane(Zero.Mouse.ScreenPosition, 0.0);
        
        
        //this.Owner.Orientation.LocalForward = this.Owner.Orientation.LookAtPoint;
        // Apply the recorded movement to our Transform
        //this.Owner.RigidBody.Velocity += Math.Normalize(facingMovement); //* this.Accel *event.Dt;
        var newVel = this.Owner.RigidBody.Velocity;
        if (this.Owner.RigidBody.Velocity.X > this.MaxSpeed) newVel.X = this.MaxSpeed;
        if (this.Owner.RigidBody.Velocity.X < -this.MaxSpeed) newVel.X = -this.MaxSpeed;
        if (this.Owner.RigidBody.Velocity.Y > this.MaxSpeed) newVel.Y = this.MaxSpeed;
        if (this.Owner.RigidBody.Velocity.Y < -this.MaxSpeed) newVel.Y = -this.MaxSpeed;
        this.Owner.RigidBody.Velocity = newVel; 
   }
}
