class PlanetEnter : ZilchComponent
{
    [Property]
    var PlanetToLoad : Level = null;
    
    [Property]
    var LoadTime : Real = 1;
    var Timer : Real = 0;
    var Fade : Real = 1;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Owner, Events.CollisionPersisted, this.OnCollisionPersisted);
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }
    
    function OnLogicUpdate(event : UpdateEvent)
    {
        this.Timer += event.Dt;
        this.Fade -= event.Dt;
    }
    
    // Detect if player is colliding with planet
    function OnCollisionPersisted(event : CollisionEvent)
    {
        var loadScreenSpawnPos = this.Space.FindObjectByName("Player").Transform.Translation;
        
        var loadScreen = Archetype.LoadScreen;
        
        if(event.OtherObject.Name == "Player")
        {
            // Loads next level and creates a loadscreen on top
            if(Zero.Keyboard.KeyIsReleased(Keys.Enter))
            {
                // Create loadscreen
                this.Space.CreateAtPosition(loadScreen, loadScreenSpawnPos);
                
                this.Timer = 0;
                // Fades into loadscreen (Timer)
                while(this.Timer < this.LoadTime)
                {
                    this.Space.FindObjectByName("LoadScreen").Sprite.Color = Real4(0, 0, 0, this.Timer);
                }
                this.Space.LoadLevel(this.PlanetToLoad);
                
                // Create loadscreen
                this.Space.CreateAtPosition(loadScreen, loadScreenSpawnPos);
                
                //this.Timer = 0;
                this.Fade = this.LoadTime;
                // Fades out of loadscreen (Fade)
                while(this.Fade > 0)
                {
                    this.Space.FindObjectByName("LoadScreen").Sprite.Color = Real4(0, 0, 0, this.Fade);
                }
            }
        }
    }
}
