class Shoot : ZilchComponent
{
    
   
    [Property]
    var Laser : Archetype = Archetype.Laser;
    
    [Property]
    var SpawnTime : Real = 0.3;

    var TimeSinceLastSpawn : Real = 0.0;

    
    
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        this.TimeSinceLastSpawn += event.Dt;
    }
    
    function Shoot(friendly : Boolean) {
        this.Shoot(friendly, this.Owner.Transform.Translation);
    }
    
    function Shoot(friendly : Boolean, spawnPosition : Real3) {
        if (this.TimeSinceLastSpawn > this.SpawnTime)
        {
            this.GameSession.FindSpaceByName("HUDSpace").SoundSpace.PlayCue(SoundCue.Laser);
            var laser = this.Space.CreateAtPosition(this.Laser, spawnPosition);
            laser.DealDamage.Friendly = friendly;
            //this.Space.CreateAtPosition(laser, spawnPosition);
            laser.RigidBody.Velocity = this.Owner.Orientation.WorldForward * 10;
            laser.Transform.Rotation = this.Owner.Transform.Rotation;
            
            // Need to reset the value
            this.TimeSinceLastSpawn = 0.0;
        }
        
    }
}
